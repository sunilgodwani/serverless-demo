{
  "Resources": {
    "serverlessdemoapiF534ED5D": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "serverless-demo-api"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Resource"
      }
    },
    "serverlessdemoapiCloudWatchRoleBFC19A3C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/CloudWatchRole/Resource"
      }
    },
    "serverlessdemoapiAccountA8A4C70F": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "serverlessdemoapiCloudWatchRoleBFC19A3C",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "serverlessdemoapiF534ED5D"
      ],
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Account"
      }
    },
    "serverlessdemoapiDeploymentEE60AF2Fbf8c42a568145d258a50be741a4ab2ab": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "serverlessdemoapi4XXD633700D",
        "serverlessdemoapi5XX06976C61",
        "serverlessdemoapicustomercustomerIdDELETEB6DB85C6",
        "serverlessdemoapicustomercustomerIdOPTIONS3F10BC6F",
        "serverlessdemoapicustomercustomerId16AE2115",
        "serverlessdemoapicustomerOPTIONS2AFF30B9",
        "serverlessdemoapicustomerPOST4E183319",
        "serverlessdemoapicustomerF3802098",
        "serverlessdemoapicustomersGETC9ECF235",
        "serverlessdemoapicustomersOPTIONSCD94F0B6",
        "serverlessdemoapicustomers9840E7BF",
        "serverlessdemoapijobtypesGET068D9316",
        "serverlessdemoapijobtypesOPTIONS01D6B990",
        "serverlessdemoapijobtypes046843CF"
      ],
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Deployment/Resource"
      }
    },
    "serverlessdemoapiDeploymentStageprodDA319E2D": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "DeploymentId": {
          "Ref": "serverlessdemoapiDeploymentEE60AF2Fbf8c42a568145d258a50be741a4ab2ab"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/DeploymentStage.prod/Resource"
      }
    },
    "serverlessdemoapicustomerF3802098": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "serverlessdemoapiF534ED5D",
            "RootResourceId"
          ]
        },
        "PathPart": "customer",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/Resource"
      }
    },
    "serverlessdemoapicustomerPOSTApiPermissiondemoserverlessserverlessdemoapiC21CC389POSTcustomer2601D68A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createCustomer5545F14F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/",
              {
                "Ref": "serverlessdemoapiDeploymentStageprodDA319E2D"
              },
              "/POST/customer"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/POST/ApiPermission.demoserverlessserverlessdemoapiC21CC389.POST..customer"
      }
    },
    "serverlessdemoapicustomerPOSTApiPermissionTestdemoserverlessserverlessdemoapiC21CC389POSTcustomerED5371FD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createCustomer5545F14F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/test-invoke-stage/POST/customer"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/POST/ApiPermission.Test.demoserverlessserverlessdemoapiC21CC389.POST..customer"
      }
    },
    "serverlessdemoapicustomerPOST4E183319": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomerF3802098"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createCustomer5545F14F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/POST/Resource"
      }
    },
    "serverlessdemoapicustomerOPTIONS2AFF30B9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomerF3802098"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/OPTIONS/Resource"
      }
    },
    "serverlessdemoapicustomercustomerId16AE2115": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "serverlessdemoapicustomerF3802098"
        },
        "PathPart": "{customerId}",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/{customerId}/Resource"
      }
    },
    "serverlessdemoapicustomercustomerIdDELETEApiPermissiondemoserverlessserverlessdemoapiC21CC389DELETEcustomercustomerIdD912A3D9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteCustomer646C3D5B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/",
              {
                "Ref": "serverlessdemoapiDeploymentStageprodDA319E2D"
              },
              "/DELETE/customer/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/{customerId}/DELETE/ApiPermission.demoserverlessserverlessdemoapiC21CC389.DELETE..customer.{customerId}"
      }
    },
    "serverlessdemoapicustomercustomerIdDELETEApiPermissionTestdemoserverlessserverlessdemoapiC21CC389DELETEcustomercustomerIdD99344CF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteCustomer646C3D5B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/test-invoke-stage/DELETE/customer/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/{customerId}/DELETE/ApiPermission.Test.demoserverlessserverlessdemoapiC21CC389.DELETE..customer.{customerId}"
      }
    },
    "serverlessdemoapicustomercustomerIdDELETEB6DB85C6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomercustomerId16AE2115"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteCustomer646C3D5B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/{customerId}/DELETE/Resource"
      }
    },
    "serverlessdemoapicustomercustomerIdOPTIONS3F10BC6F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomercustomerId16AE2115"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customer/{customerId}/OPTIONS/Resource"
      }
    },
    "serverlessdemoapicustomers9840E7BF": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "serverlessdemoapiF534ED5D",
            "RootResourceId"
          ]
        },
        "PathPart": "customers",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customers/Resource"
      }
    },
    "serverlessdemoapicustomersGETApiPermissiondemoserverlessserverlessdemoapiC21CC389GETcustomers28BAF293": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getCustomers1EDD3905",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/",
              {
                "Ref": "serverlessdemoapiDeploymentStageprodDA319E2D"
              },
              "/GET/customers"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customers/GET/ApiPermission.demoserverlessserverlessdemoapiC21CC389.GET..customers"
      }
    },
    "serverlessdemoapicustomersGETApiPermissionTestdemoserverlessserverlessdemoapiC21CC389GETcustomersBC988A79": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getCustomers1EDD3905",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "serverlessdemoapiF534ED5D"
              },
              "/test-invoke-stage/GET/customers"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customers/GET/ApiPermission.Test.demoserverlessserverlessdemoapiC21CC389.GET..customers"
      }
    },
    "serverlessdemoapicustomersGETC9ECF235": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomers9840E7BF"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getCustomers1EDD3905",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customers/GET/Resource"
      }
    },
    "serverlessdemoapicustomersOPTIONSCD94F0B6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "serverlessdemoapicustomers9840E7BF"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/customers/OPTIONS/Resource"
      }
    },
    "serverlessdemoapijobtypes046843CF": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "serverlessdemoapiF534ED5D",
            "RootResourceId"
          ]
        },
        "PathPart": "job-types",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/job-types/Resource"
      }
    },
    "serverlessdemoapijobtypesGET068D9316": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "serverlessdemoapijobtypes046843CF"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": "arn:aws:iam::094355023285:role/api-gateway-execution-role",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ContentHandling": "CONVERT_TO_TEXT",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{ \"job_types\" : [\n        #foreach($item in $inputRoot.Items) {\n            \"job_type\": \"$item.job_type.S\",\n            \"categories\":[\n            #foreach($category in $item.categories.L) {\n                \"category_name\": \"$category.M.category_name.S\",\n                \"subcategories\":[\n                 #foreach($subcategory in $category.M.subcategories.L) {\n                    \"subcategory_name\": \"$subcategory.M.subcategory_name.S\"\n                    \n                }#if($foreach.hasNext),#end\n        \t    #end\n                ]\n                \n            }#if($foreach.hasNext),#end\n    \t    #end\n            ]\n        }#if($foreach.hasNext),#end\n\t#end\n    ]\n}"
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{\n    \"TableName\": \"job_type\"\n}"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-southeast-2:dynamodb:action/Scan"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/job-types/GET/Resource"
      }
    },
    "serverlessdemoapijobtypesOPTIONS01D6B990": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "serverlessdemoapijobtypes046843CF"
        },
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/Default/job-types/OPTIONS/Resource"
      }
    },
    "serverlessdemoapi4XXD633700D": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Credentials": "'false'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/4XX/Resource"
      }
    },
    "serverlessdemoapi5XX06976C61": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "serverlessdemoapiF534ED5D"
        },
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Credentials": "'false'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,access_token,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/serverless-demo-api/5XX/Resource"
      }
    },
    "createCustomerServiceRoleD9E593F8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomer/ServiceRole/Resource"
      }
    },
    "createCustomerServiceRoleDefaultPolicy6EB8C3E2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/customers"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createCustomerServiceRoleDefaultPolicy6EB8C3E2",
        "Roles": [
          {
            "Ref": "createCustomerServiceRoleD9E593F8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomer/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createCustomer5545F14F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar"
        },
        "Role": {
          "Fn::GetAtt": [
            "createCustomerServiceRoleD9E593F8",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "FUNCTION_NAME": "createCustomer",
            "MAIN_CLASS": "com.demo.app.FunctionConfiguration"
          }
        },
        "Handler": "org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler",
        "MemorySize": 512,
        "Runtime": "java8",
        "Timeout": 60
      },
      "DependsOn": [
        "createCustomerServiceRoleDefaultPolicy6EB8C3E2",
        "createCustomerServiceRoleD9E593F8"
      ],
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomer/Resource",
        "aws:asset:path": "asset.e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar",
        "aws:asset:property": "Code"
      }
    },
    "createCustomerCurrentVersionA5454F115340242db7aef3c9162ef78251caceab": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "createCustomer5545F14F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomer/CurrentVersion/Resource"
      }
    },
    "createCustomerAlias61A9DCE3": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "createCustomer5545F14F"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "createCustomerCurrentVersionA5454F115340242db7aef3c9162ef78251caceab",
            "Version"
          ]
        },
        "Name": "createCustomerAlias"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "createCustomerDeploymentGroupApplication89426A9A"
          },
          "DeploymentGroupName": {
            "Ref": "createCustomerDeploymentGroup9DE1F3C7"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomerAlias/Resource"
      }
    },
    "createCustomerDeploymentGroupApplication89426A9A": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomerDeploymentGroup/Application/Resource"
      }
    },
    "createCustomerDeploymentGroupServiceRole5CCBCBE4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "codedeploy.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomerDeploymentGroup/ServiceRole/Resource"
      }
    },
    "createCustomerDeploymentGroup9DE1F3C7": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "createCustomerDeploymentGroupApplication89426A9A"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "createCustomerDeploymentGroupServiceRole5CCBCBE4",
            "Arn"
          ]
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/createCustomerDeploymentGroup/Resource"
      }
    },
    "getCustomersServiceRole43900180": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomers/ServiceRole/Resource"
      }
    },
    "getCustomersServiceRoleDefaultPolicyF4D6A5EE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/customers"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getCustomersServiceRoleDefaultPolicyF4D6A5EE",
        "Roles": [
          {
            "Ref": "getCustomersServiceRole43900180"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getCustomers1EDD3905": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar"
        },
        "Role": {
          "Fn::GetAtt": [
            "getCustomersServiceRole43900180",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "FUNCTION_NAME": "getCustomers",
            "MAIN_CLASS": "com.demo.app.FunctionConfiguration"
          }
        },
        "Handler": "org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler",
        "MemorySize": 512,
        "Runtime": "java8",
        "Timeout": 60
      },
      "DependsOn": [
        "getCustomersServiceRoleDefaultPolicyF4D6A5EE",
        "getCustomersServiceRole43900180"
      ],
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomers/Resource",
        "aws:asset:path": "asset.e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar",
        "aws:asset:property": "Code"
      }
    },
    "getCustomersCurrentVersion9C8D5F706cfb767c55244ad18ca9b678c7184d15": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "getCustomers1EDD3905"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomers/CurrentVersion/Resource"
      }
    },
    "getCustomersAliasCFCEECE6": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "getCustomers1EDD3905"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "getCustomersCurrentVersion9C8D5F706cfb767c55244ad18ca9b678c7184d15",
            "Version"
          ]
        },
        "Name": "getCustomersAlias"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "getCustomersDeploymentGroupApplication26A81053"
          },
          "DeploymentGroupName": {
            "Ref": "getCustomersDeploymentGroup092B8899"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomersAlias/Resource"
      }
    },
    "getCustomersDeploymentGroupApplication26A81053": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomersDeploymentGroup/Application/Resource"
      }
    },
    "getCustomersDeploymentGroupServiceRole7F1A998B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "codedeploy.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomersDeploymentGroup/ServiceRole/Resource"
      }
    },
    "getCustomersDeploymentGroup092B8899": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "getCustomersDeploymentGroupApplication26A81053"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "getCustomersDeploymentGroupServiceRole7F1A998B",
            "Arn"
          ]
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/getCustomersDeploymentGroup/Resource"
      }
    },
    "deleteCustomerServiceRoleD49114D0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomer/ServiceRole/Resource"
      }
    },
    "deleteCustomerServiceRoleDefaultPolicyD9927116": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/customers"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteCustomerServiceRoleDefaultPolicyD9927116",
        "Roles": [
          {
            "Ref": "deleteCustomerServiceRoleD49114D0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomer/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteCustomer646C3D5B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar"
        },
        "Role": {
          "Fn::GetAtt": [
            "deleteCustomerServiceRoleD49114D0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "FUNCTION_NAME": "deleteCustomer",
            "MAIN_CLASS": "com.demo.app.FunctionConfiguration"
          }
        },
        "Handler": "org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler",
        "MemorySize": 512,
        "Runtime": "java8",
        "Timeout": 60
      },
      "DependsOn": [
        "deleteCustomerServiceRoleDefaultPolicyD9927116",
        "deleteCustomerServiceRoleD49114D0"
      ],
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomer/Resource",
        "aws:asset:path": "asset.e35bcce5f6c0c395bda4cb9de6257ed4e56745b9cf4d108469f474fccd17be9e.jar",
        "aws:asset:property": "Code"
      }
    },
    "deleteCustomerCurrentVersion26197592e6c0759494fe802322f9f142dfb2941b": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "deleteCustomer646C3D5B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomer/CurrentVersion/Resource"
      }
    },
    "deleteCustomerAliasE5831D04": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "deleteCustomer646C3D5B"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "deleteCustomerCurrentVersion26197592e6c0759494fe802322f9f142dfb2941b",
            "Version"
          ]
        },
        "Name": "deleteCustomerAlias"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "deleteCustomerDeploymentGroupApplication5256BCE6"
          },
          "DeploymentGroupName": {
            "Ref": "deleteCustomerDeploymentGroupD9336923"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomerAlias/Resource"
      }
    },
    "deleteCustomerDeploymentGroupApplication5256BCE6": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomerDeploymentGroup/Application/Resource"
      }
    },
    "deleteCustomerDeploymentGroupServiceRole172C1181": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "codedeploy.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomerDeploymentGroup/ServiceRole/Resource"
      }
    },
    "deleteCustomerDeploymentGroupD9336923": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "deleteCustomerDeploymentGroupApplication5256BCE6"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "deleteCustomerDeploymentGroupServiceRole172C1181",
            "Arn"
          ]
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/deleteCustomerDeploymentGroup/Resource"
      }
    },
    "lambdademowarmuprule1D69265EB": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "lambda-demo-warm-up-rule-1",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "createCustomer5545F14F",
                "Arn"
              ]
            },
            "Id": "Target0"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "getCustomers1EDD3905",
                "Arn"
              ]
            },
            "Id": "Target1"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "deleteCustomer646C3D5B",
                "Arn"
              ]
            },
            "Id": "Target2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/lambda-demo-warm-up-rule-1/Resource"
      }
    },
    "lambdademowarmuprule1AllowEventRuledemoserverlesscreateCustomerB1186E98188B83A9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createCustomer5545F14F",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "lambdademowarmuprule1D69265EB",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/lambda-demo-warm-up-rule-1/AllowEventRuledemoserverlesscreateCustomerB1186E98"
      }
    },
    "lambdademowarmuprule1AllowEventRuledemoserverlessgetCustomers45B5034CC7E85CAC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getCustomers1EDD3905",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "lambdademowarmuprule1D69265EB",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/lambda-demo-warm-up-rule-1/AllowEventRuledemoserverlessgetCustomers45B5034C"
      }
    },
    "lambdademowarmuprule1AllowEventRuledemoserverlessdeleteCustomer1CEBD4CC3CE81029": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteCustomer646C3D5B",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "lambdademowarmuprule1D69265EB",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/lambda-demo-warm-up-rule-1/AllowEventRuledemoserverlessdeleteCustomer1CEBD4CC"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE11RwU7DMAz9lt29bAMhwY0yxCQEAg2Ju0m9EdYmUZxsmqr8O0nabrCTn59fbD9nIe5uxXxyjweeyno366RxJLoPj3IHy41+C94GD2tiE5wkqJjJp+pW6S0sjWbvgvRZeZIknAq18sroCLlxh1Zt0dMBj6JLOl9ZNTwZYSWlCdrDI9nGHFvSpeefLM8svXswTntAPif/1ngl/23qTA1o1W+QBDbtXcQXVASFbdrQNH2rHN9No+Qxpz2K0GD7VaPoMkWuVczJKDwFLbPjrDzhT3I8cCOsGoVcHGcQga+nmG/KopwWpKmpLrZF91ImnY+wciZY6NnK2rQOjiMv0os3EWifMCdvYfCWYowRnnGPs8WNmIuryQ8rNXXpF1RLYt3HX9w/8xIgAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "demo-serverless/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "serverlessdemoapiEndpoint029638BE": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "serverlessdemoapiF534ED5D"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "serverlessdemoapiDeploymentStageprodDA319E2D"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}